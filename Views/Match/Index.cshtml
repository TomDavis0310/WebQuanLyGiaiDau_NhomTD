@model IEnumerable<WebQuanLyGiaiDau_NhomTD.Models.Match>
@using WebQuanLyGiaiDau_NhomTD.Models.UserModel

@{
    ViewData["Title"] = "Danh Sách Trận Đấu";
}

<h1 class="text-center text-primary mt-4">📋 Danh Sách Trận Đấu</h1>

@if (User.IsInRole(WebQuanLyGiaiDau_NhomTD.Models.UserModel.SD.Role_Admin))
{
    <div class="text-end mb-3">
        <a asp-action="Create" class="btn btn-success">➕ Thêm Trận Đấu Mới</a>
    </div>
}

<table class="table table-hover table-bordered shadow">
    <thead class="table-dark text-center">
        <tr>
            <th>Đội A</th>
            <th>Đội B</th>
            <th>Tỉ Số</th>
            <th>Ngày Thi Đấu</th>
            <th>Giải Đấu</th>
            <th>Hành Động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="align-middle" data-match-id="@item.Id">
                <td>@Html.DisplayFor(modelItem => item.TeamA)</td>
                <td>@Html.DisplayFor(modelItem => item.TeamB)</td>
                <td class="text-center"><span class="match-score">@item.ScoreTeamA - @item.ScoreTeamB</span></td>
                <td>@Html.DisplayFor(modelItem => item.MatchDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Tournament.Name)</td>
                <td class="text-center">
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-1">🔍 Xem</a>
                    @if (User.IsInRole(WebQuanLyGiaiDau_NhomTD.Models.UserModel.SD.Role_Admin))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">✏️ Sửa</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">🗑️ Xóa</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/matchHub")
            .build();

        connection.on("ReceiveMatchUpdate", (matchId, score) => {
            console.log(`Match ${matchId} updated: ${score}`);
            // Find the table row with the matching matchId
            const row = document.querySelector(`tr[data-match-id="${matchId}"]`);
            if (row) {
                // Update the score in the row (assuming you have a specific element for the score)
                const scoreElement = row.querySelector(".match-score");
                if (scoreElement) {
                    scoreElement.textContent = score;
                } else {
                    console.log("Score element not found in row");
                }
            } else {
                console.log(`Row not found for matchId ${matchId}`);
            }
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
}
